
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "content/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:


Petrophysically guided inversion: Joint linear example with nonlinear relationships
===================================================================================

We do a comparison between the classic least-squares inversion
and our formulation of a petrophysically guided inversion.
We explore it through coupling two linear problems whose respective physical
properties are linked by polynomial relationships that change between rock units.

.. GENERATED FROM PYTHON SOURCE LINES 11-432



.. image-sg:: /content/examples/10-pgi/images/sphx_glr_plot_inv_1_PGI_Linear_1D_joint_WithRelationships_001.png
   :alt: Problem 1, Problem 2, Petrophysical Distribution, Problem 1, Problem 2, Petrophysical Distribution, Problem 1, Problem 2, Petro Distribution
   :srcset: /content/examples/10-pgi/images/sphx_glr_plot_inv_1_PGI_Linear_1D_joint_WithRelationships_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    SimPEG.InvProblem will set Regularization.reference_model to m0.
    SimPEG.InvProblem will set Regularization.reference_model to m0.
    SimPEG.InvProblem will set Regularization.reference_model to m0.

                        SimPEG.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
                        ***Done using the default solver Pardiso and no solver_opts.***
                    
    Alpha scales: [3.466585984471505, 0.0, 3.497667477042771e-06, 0.0]
    Calculating the scaling parameter.
    Scale Multipliers:  [0.09996043 0.90003957]
    <class 'SimPEG.regularization.pgi.PGIsmallness'>
    Initial data misfit scales:  [0.09996043 0.90003957]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.93e+01  3.00e+05  0.00e+00  3.00e+05    1.41e+02      0              
    geophys. misfits: 991.5 (target 30.0 [False]); 75.8 (target 30.0 [False]) | smallness misfit: 2954.4 (target: 200.0 [False])
    Beta cooling evaluation: progress: [991.5  75.8]; minimum progress targets: [240000. 240000.]
       1  1.93e+01  1.67e+02  4.17e+01  9.71e+02    7.90e+01      0              
    geophys. misfits: 460.4 (target 30.0 [False]); 22.0 (target 30.0 [True]) | smallness misfit: 1328.1 (target: 200.0 [False])
    Beta cooling evaluation: progress: [460.4  22. ]; minimum progress targets: [793.2  60.7]
    Updating scaling for data misfits by  1.3632428281069984
    New scales: [0.13149575 0.86850425]
       2  1.93e+01  7.96e+01  4.03e+01  8.57e+02    7.49e+01      0   Skip BFGS  
    geophys. misfits: 307.1 (target 30.0 [False]); 21.8 (target 30.0 [True]) | smallness misfit: 1262.8 (target: 200.0 [False])
    Beta cooling evaluation: progress: [307.1  21.8]; minimum progress targets: [368.3  30. ]
    Updating scaling for data misfits by  1.3745508045649883
    New scales: [0.1722633 0.8277367]
       3  1.93e+01  7.10e+01  4.12e+01  8.65e+02    6.96e+01      0   Skip BFGS  
    geophys. misfits: 206.4 (target 30.0 [False]); 21.8 (target 30.0 [True]) | smallness misfit: 1217.6 (target: 200.0 [False])
    Beta cooling evaluation: progress: [206.4  21.8]; minimum progress targets: [245.7  30. ]
    Updating scaling for data misfits by  1.374927306128513
    New scales: [0.22248035 0.77751965]
       4  1.93e+01  6.29e+01  4.20e+01  8.72e+02    6.99e+01      0              
    geophys. misfits: 141.7 (target 30.0 [False]); 22.0 (target 30.0 [True]) | smallness misfit: 1184.2 (target: 200.0 [False])
    Beta cooling evaluation: progress: [141.7  22. ]; minimum progress targets: [165.1  30. ]
    Updating scaling for data misfits by  1.3665305949015345
    New scales: [0.28110339 0.71889661]
       5  1.93e+01  5.56e+01  4.26e+01  8.77e+02    7.03e+01      0   Skip BFGS  
    geophys. misfits: 100.8 (target 30.0 [False]); 22.2 (target 30.0 [True]) | smallness misfit: 1158.0 (target: 200.0 [False])
    Beta cooling evaluation: progress: [100.8  22.2]; minimum progress targets: [113.4  30. ]
    Updating scaling for data misfits by  1.3502522954868221
    New scales: [0.34553966 0.65446034]
       6  1.93e+01  4.94e+01  4.31e+01  8.81e+02    6.83e+01      0   Skip BFGS  
    geophys. misfits: 75.0 (target 30.0 [False]); 22.6 (target 30.0 [True]) | smallness misfit: 1136.0 (target: 200.0 [False])
    Beta cooling evaluation: progress: [75.  22.6]; minimum progress targets: [80.6 30. ]
    Updating scaling for data misfits by  1.3256197409819215
    New scales: [0.41172873 0.58827127]
       7  1.93e+01  4.42e+01  4.35e+01  8.84e+02    6.65e+01      0   Skip BFGS  
    geophys. misfits: 58.9 (target 30.0 [False]); 23.2 (target 30.0 [True]) | smallness misfit: 1116.4 (target: 200.0 [False])
    Beta cooling evaluation: progress: [58.9 23.2]; minimum progress targets: [60. 30.]
    Updating scaling for data misfits by  1.29179095191996
    New scales: [0.47482284 0.52517716]
       8  1.93e+01  4.01e+01  4.38e+01  8.85e+02    6.42e+01      0   Skip BFGS  
    geophys. misfits: 48.6 (target 30.0 [False]); 24.0 (target 30.0 [True]) | smallness misfit: 1098.6 (target: 200.0 [False])
    Beta cooling evaluation: progress: [48.6 24. ]; minimum progress targets: [47.1 30. ]
    Decreasing beta to counter data misfit decrase plateau.
    Updating scaling for data misfits by  1.2498550712172474
    New scales: [0.53052044 0.46947956]
       9  9.64e+00  3.71e+01  4.40e+01  4.62e+02    8.61e+01      0   Skip BFGS  
    geophys. misfits: 19.2 (target 30.0 [True]); 20.5 (target 30.0 [True]) | smallness misfit: 1127.7 (target: 200.0 [False])
    Beta cooling evaluation: progress: [19.2 20.5]; minimum progress targets: [38.9 30. ]
    Warming alpha_pgi to favor clustering:  1.5120952340729237
      10  9.64e+00  1.98e+01  4.65e+01  4.68e+02    5.90e+01      0              
    geophys. misfits: 18.9 (target 30.0 [True]); 22.1 (target 30.0 [True]) | smallness misfit: 1025.3 (target: 200.0 [False])
    Beta cooling evaluation: progress: [18.9 22.1]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  2.2273881909462587
      11  9.64e+00  2.04e+01  4.80e+01  4.83e+02    6.00e+01      0              
    geophys. misfits: 18.5 (target 30.0 [True]); 24.5 (target 30.0 [True]) | smallness misfit: 922.9 (target: 200.0 [False])
    Beta cooling evaluation: progress: [18.5 24.5]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  3.1707062568707705
      12  9.64e+00  2.13e+01  4.97e+01  5.01e+02    7.04e+01      0              
    geophys. misfits: 18.3 (target 30.0 [True]); 28.0 (target 30.0 [True]) | smallness misfit: 819.8 (target: 200.0 [False])
    Beta cooling evaluation: progress: [18.3 28. ]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  4.294087348358102
      13  9.64e+00  2.29e+01  5.15e+01  5.20e+02    8.23e+01      0              
    geophys. misfits: 18.3 (target 30.0 [True]); 32.4 (target 30.0 [False]) | smallness misfit: 734.9 (target: 200.0 [False])
    Beta cooling evaluation: progress: [18.3 32.4]; minimum progress targets: [30. 30.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.6436251619718456
    New scales: [0.40741294 0.59258706]
      14  4.82e+00  2.67e+01  5.12e+01  2.74e+02    9.48e+01      0              
    geophys. misfits: 13.5 (target 30.0 [True]); 21.8 (target 30.0 [True]) | smallness misfit: 774.5 (target: 200.0 [False])
    Beta cooling evaluation: progress: [13.5 21.8]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  7.740352239154019
      15  4.82e+00  1.84e+01  5.82e+01  2.99e+02    7.65e+01      0              
    geophys. misfits: 14.0 (target 30.0 [True]); 24.4 (target 30.0 [True]) | smallness misfit: 636.7 (target: 200.0 [False])
    Beta cooling evaluation: progress: [14.  24.4]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  13.052272139095345
      16  4.82e+00  2.02e+01  6.49e+01  3.33e+02    9.68e+01      0              
    geophys. misfits: 15.5 (target 30.0 [True]); 24.5 (target 30.0 [True]) | smallness misfit: 517.3 (target: 200.0 [False])
    Beta cooling evaluation: progress: [15.5 24.5]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  20.601095892307253
      17  4.82e+00  2.08e+01  7.26e+01  3.71e+02    1.12e+02      0              
    geophys. misfits: 17.8 (target 30.0 [True]); 33.2 (target 30.0 [False]) | smallness misfit: 410.1 (target: 200.0 [False])
    Beta cooling evaluation: progress: [17.8 33.2]; minimum progress targets: [30. 30.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.6853625289462562
    New scales: [0.28973915 0.71026085]
      18  2.41e+00  2.87e+01  6.97e+01  1.97e+02    1.02e+02      0              
    geophys. misfits: 16.4 (target 30.0 [True]); 23.1 (target 30.0 [True]) | smallness misfit: 400.8 (target: 200.0 [False])
    Beta cooling evaluation: progress: [16.4 23.1]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  32.241744820349545
      19  2.41e+00  2.11e+01  8.18e+01  2.18e+02    9.05e+01      0              
    geophys. misfits: 17.8 (target 30.0 [True]); 22.6 (target 30.0 [True]) | smallness misfit: 362.5 (target: 200.0 [False])
    Beta cooling evaluation: progress: [17.8 22.6]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  48.50155108532288
      20  2.41e+00  2.12e+01  9.44e+01  2.49e+02    1.14e+02      0              
    geophys. misfits: 22.0 (target 30.0 [True]); 20.6 (target 30.0 [True]) | smallness misfit: 315.7 (target: 200.0 [False])
    Beta cooling evaluation: progress: [22.  20.6]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  68.45961472984136
      21  2.41e+00  2.10e+01  1.08e+02  2.81e+02    1.17e+02      0              
    geophys. misfits: 25.9 (target 30.0 [True]); 19.5 (target 30.0 [True]) | smallness misfit: 268.6 (target: 200.0 [False])
    Beta cooling evaluation: progress: [25.9 19.5]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  92.31185039875561
      22  2.41e+00  2.13e+01  1.20e+02  3.11e+02    1.19e+02      0              
    geophys. misfits: 28.8 (target 30.0 [True]); 19.4 (target 30.0 [True]) | smallness misfit: 245.0 (target: 200.0 [False])
    Beta cooling evaluation: progress: [28.8 19.4]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  119.38299610376257
      23  2.41e+00  2.21e+01  1.32e+02  3.41e+02    1.28e+02      0              
    geophys. misfits: 32.5 (target 30.0 [False]); 20.7 (target 30.0 [True]) | smallness misfit: 211.1 (target: 200.0 [False])
    Beta cooling evaluation: progress: [32.5 20.7]; minimum progress targets: [30. 30.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.4520752529313796
    New scales: [0.37199739 0.62800261]
      24  1.21e+00  2.51e+01  1.28e+02  1.80e+02    1.24e+02      0              
    geophys. misfits: 16.6 (target 30.0 [True]); 18.9 (target 30.0 [True]) | smallness misfit: 207.9 (target: 200.0 [False])
    Beta cooling evaluation: progress: [16.6 18.9]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  202.6104295221019
      25  1.21e+00  1.81e+01  1.70e+02  2.22e+02    1.19e+02      0              
    geophys. misfits: 21.6 (target 30.0 [True]); 21.7 (target 30.0 [True]) | smallness misfit: 192.6 (target: 200.0 [True])
    All targets have been reached
    Beta cooling evaluation: progress: [21.6 21.7]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  280.67086134385863
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 3.0000e+04
    0 : |xc-x_last| = 4.7182e-01 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 1.1898e+02 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 1.1898e+02 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =     26
    ------------------------- DONE! -------------------------
    SimPEG.InvProblem will set Regularization.reference_model to m0.
    SimPEG.InvProblem will set Regularization.reference_model to m0.
    SimPEG.InvProblem will set Regularization.reference_model to m0.

                        SimPEG.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
                        ***Done using the default solver Pardiso and no solver_opts.***
                    
    Alpha scales: [0.00034499025026179766, 0.0, 3.7949084087632494e-06, 0.0]
    Calculating the scaling parameter.
    Scale Multipliers:  [0.09996043 0.90003957]
    <class 'SimPEG.regularization.pgi.PGIsmallness'>
    Initial data misfit scales:  [0.09996043 0.90003957]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.92e+03  3.00e+05  0.00e+00  3.00e+05    1.41e+02      0              
    geophys. misfits: 86414.9 (target 30.0 [False]); 62820.2 (target 30.0 [False]) | smallness misfit: 274.0 (target: 200.0 [False])
    Beta cooling evaluation: progress: [86414.9 62820.2]; minimum progress targets: [240000. 240000.]
       1  1.92e+03  6.52e+04  6.61e-01  6.65e+04    9.27e+01      0              
    geophys. misfits: 599.1 (target 30.0 [False]); 24.0 (target 30.0 [True]) | smallness misfit: 121.1 (target: 200.0 [True])
    Beta cooling evaluation: progress: [599.1  24. ]; minimum progress targets: [69131.9 50256.2]
    Updating scaling for data misfits by  1.2507779926458842
    New scales: [0.12197076 0.87802924]
       2  1.92e+03  9.41e+01  3.25e-01  7.20e+02    9.64e+01      0   Skip BFGS  
    geophys. misfits: 86.8 (target 30.0 [False]); 24.1 (target 30.0 [True]) | smallness misfit: 56.3 (target: 200.0 [True])
    Beta cooling evaluation: progress: [86.8 24.1]; minimum progress targets: [479.2  30. ]
    Updating scaling for data misfits by  1.2451935395338916
    New scales: [0.14746699 0.85253301]
       3  1.92e+03  3.33e+01  1.47e-01  3.17e+02    8.47e+01      0   Skip BFGS  
    geophys. misfits: 64.2 (target 30.0 [False]); 21.7 (target 30.0 [True]) | smallness misfit: 54.2 (target: 200.0 [True])
    Beta cooling evaluation: progress: [64.2 21.7]; minimum progress targets: [69.4 30. ]
    Updating scaling for data misfits by  1.3834625249315229
    New scales: [0.19309586 0.80690414]
       4  1.92e+03  2.99e+01  1.40e-01  2.99e+02    8.65e+01      0              
    geophys. misfits: 43.4 (target 30.0 [False]); 22.3 (target 30.0 [True]) | smallness misfit: 47.8 (target: 200.0 [True])
    Beta cooling evaluation: progress: [43.4 22.3]; minimum progress targets: [51.4 30. ]
    Updating scaling for data misfits by  1.344890151839822
    New scales: [0.24347786 0.75652214]
       5  1.92e+03  2.74e+01  1.30e-01  2.77e+02    6.43e+01      0              
    geophys. misfits: 31.7 (target 30.0 [False]); 23.0 (target 30.0 [True]) | smallness misfit: 48.3 (target: 200.0 [True])
    Beta cooling evaluation: progress: [31.7 23. ]; minimum progress targets: [34.7 30. ]
    Updating scaling for data misfits by  1.305767025342401
    New scales: [0.2958966 0.7041034]
       6  1.92e+03  2.56e+01  1.31e-01  2.78e+02    6.53e+01      0   Skip BFGS  
    geophys. misfits: 25.0 (target 30.0 [True]); 23.6 (target 30.0 [True]) | smallness misfit: 48.6 (target: 200.0 [True])
    All targets have been reached
    Beta cooling evaluation: progress: [25.  23.6]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  1.2367863827143057
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 3.0000e+04
    0 : |xc-x_last| = 3.4587e-02 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 6.5294e+01 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 6.5294e+01 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =      7
    ------------------------- DONE! -------------------------
    SimPEG.InvProblem will set Regularization.reference_model to m0.
    SimPEG.InvProblem will set Regularization.reference_model to m0.

                        SimPEG.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
                        ***Done using the default solver Pardiso and no solver_opts.***
                    
    Alpha scales: [3.5188574849327586e-05, 0.0, 3.4826374354602616e-05, 0.0]
    Calculating the scaling parameter.
    Scale Multipliers:  [0.09996043 0.90003957]
    /home/ssoler/simpeg/SimPEG/directives/directives.py:332: UserWarning:

    There is no PGI regularization. Smallness target is turned off (TriggerSmall flag)

    Initial data misfit scales:  [0.09996043 0.90003957]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.04e+06  3.00e+05  0.00e+00  3.00e+05    1.41e+02      0              
    geophys. misfits: 55179.1 (target 30.0 [False]); 36188.8 (target 30.0 [False])
       1  2.08e+05  3.81e+04  4.28e-02  4.70e+04    1.38e+02      0              
    geophys. misfits: 8012.6 (target 30.0 [False]); 3915.1 (target 30.0 [False])
       2  4.17e+04  4.32e+03  1.07e-01  8.79e+03    1.31e+02      0   Skip BFGS  
    geophys. misfits: 521.4 (target 30.0 [False]); 249.6 (target 30.0 [False])
       3  8.34e+03  2.77e+02  1.42e-01  1.46e+03    1.03e+02      0   Skip BFGS  
    geophys. misfits: 33.8 (target 30.0 [False]); 32.4 (target 30.0 [False])
       4  1.67e+03  3.25e+01  1.52e-01  2.85e+02    8.43e+01      0   Skip BFGS  
    geophys. misfits: 10.6 (target 30.0 [True]); 18.2 (target 30.0 [True])
    All targets have been reached
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 3.0000e+04
    0 : |xc-x_last| = 4.3829e-01 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 8.4218e+01 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 8.4218e+01 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =      5
    ------------------------- DONE! -------------------------
    /home/ssoler/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:301: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/ssoler/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:308: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.

    /home/ssoler/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:346: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/ssoler/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:353: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.

    /home/ssoler/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:360: UserWarning:

    The following kwargs were not used by contour: 'label'

    /home/ssoler/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:368: UserWarning:

    The following kwargs were not used by contour: 'label'

    /home/ssoler/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:402: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/ssoler/simpeg/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:409: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.







|

.. code-block:: Python


    import discretize as Mesh
    import matplotlib.pyplot as plt
    import numpy as np
    from SimPEG import (
        data_misfit,
        directives,
        inverse_problem,
        inversion,
        maps,
        optimization,
        regularization,
        simulation,
        utils,
    )

    # Random seed for reproductibility
    np.random.seed(1)
    # Mesh
    N = 100
    mesh = Mesh.TensorMesh([N])

    # Survey design parameters
    nk = 30
    jk = np.linspace(1.0, 59.0, nk)
    p = -0.25
    q = 0.25


    # Physics
    def g(k):
        return np.exp(p * jk[k] * mesh.cell_centers_x) * np.cos(
            np.pi * q * jk[k] * mesh.cell_centers_x
        )


    G = np.empty((nk, mesh.nC))

    for i in range(nk):
        G[i, :] = g(i)

    m0 = np.zeros(mesh.nC)
    m0[20:41] = np.linspace(0.0, 1.0, 21)
    m0[41:57] = np.linspace(-1, 0.0, 16)

    poly0 = maps.PolynomialPetroClusterMap(coeffyx=np.r_[0.0, -4.0, 4.0])
    poly1 = maps.PolynomialPetroClusterMap(coeffyx=np.r_[-0.0, 3.0, 6.0, 6.0])
    poly0_inverse = maps.PolynomialPetroClusterMap(coeffyx=-np.r_[0.0, -4.0, 4.0])
    poly1_inverse = maps.PolynomialPetroClusterMap(coeffyx=-np.r_[0.0, 3.0, 6.0, 6.0])
    cluster_mapping = [maps.IdentityMap(), poly0_inverse, poly1_inverse]

    m1 = np.zeros(100)
    m1[20:41] = 1.0 + (poly0 * np.vstack([m0[20:41], m1[20:41]]).T)[:, 1]
    m1[41:57] = -1.0 + (poly1 * np.vstack([m0[41:57], m1[41:57]]).T)[:, 1]

    model2d = np.vstack([m0, m1]).T
    m = utils.mkvc(model2d)

    clfmapping = utils.GaussianMixtureWithNonlinearRelationships(
        mesh=mesh,
        n_components=3,
        covariance_type="full",
        tol=1e-8,
        reg_covar=1e-3,
        max_iter=1000,
        n_init=100,
        init_params="kmeans",
        random_state=None,
        warm_start=False,
        means_init=np.array(
            [
                [0, 0],
                [m0[20:41].mean(), m1[20:41].mean()],
                [m0[41:57].mean(), m1[41:57].mean()],
            ]
        ),
        verbose=0,
        verbose_interval=10,
        cluster_mapping=cluster_mapping,
    )
    clfmapping = clfmapping.fit(model2d)

    clfnomapping = utils.WeightedGaussianMixture(
        mesh=mesh,
        n_components=3,
        covariance_type="full",
        tol=1e-8,
        reg_covar=1e-3,
        max_iter=1000,
        n_init=100,
        init_params="kmeans",
        random_state=None,
        warm_start=False,
        verbose=0,
        verbose_interval=10,
    )
    clfnomapping = clfnomapping.fit(model2d)

    wires = maps.Wires(("m1", mesh.nC), ("m2", mesh.nC))

    relatrive_error = 0.01
    noise_floor = 0.0

    prob1 = simulation.LinearSimulation(mesh, G=G, model_map=wires.m1)
    survey1 = prob1.make_synthetic_data(
        m, relative_error=relatrive_error, noise_floor=noise_floor, add_noise=True
    )

    prob2 = simulation.LinearSimulation(mesh, G=G, model_map=wires.m2)
    survey2 = prob2.make_synthetic_data(
        m, relative_error=relatrive_error, noise_floor=noise_floor, add_noise=True
    )


    dmis1 = data_misfit.L2DataMisfit(simulation=prob1, data=survey1)
    dmis2 = data_misfit.L2DataMisfit(simulation=prob2, data=survey2)
    dmis = dmis1 + dmis2
    minit = np.zeros_like(m)

    # Distance weighting
    wr1 = np.sum(prob1.G**2.0, axis=0) ** 0.5 / mesh.cell_volumes
    wr1 = wr1 / np.max(wr1)
    wr2 = np.sum(prob2.G**2.0, axis=0) ** 0.5 / mesh.cell_volumes
    wr2 = wr2 / np.max(wr2)

    reg_simple = regularization.PGI(
        mesh=mesh,
        gmmref=clfmapping,
        gmm=clfmapping,
        approx_gradient=True,
        wiresmap=wires,
        non_linear_relationships=True,
        weights_list=[wr1, wr2],
    )

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )

    invProb = inverse_problem.BaseInvProblem(dmis, reg_simple, opt)

    # directives
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    alpha0_ratio = np.r_[1e6, 1e4, 1, 1]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    betaIt = directives.PGI_BetaAlphaSchedule(
        verbose=True,
        coolingFactor=2.0,
        progress=0.2,
    )
    targets = directives.MultiTargetMisfits(verbose=True)
    petrodir = directives.PGI_UpdateParameters(update_gmm=False)

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, petrodir, targets, betaIt, scaling_schedule],
    )

    mcluster_map = inv.run(minit)

    # Inversion with no nonlinear mapping
    reg_simple_no_map = regularization.PGI(
        mesh=mesh,
        gmmref=clfnomapping,
        gmm=clfnomapping,
        approx_gradient=True,
        wiresmap=wires,
        non_linear_relationships=False,
        weights_list=[wr1, wr2],
    )

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )

    invProb = inverse_problem.BaseInvProblem(dmis, reg_simple_no_map, opt)

    # directives
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    alpha0_ratio = np.r_[100.0 * np.ones(2), 1, 1]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    betaIt = directives.PGI_BetaAlphaSchedule(
        verbose=True,
        coolingFactor=2.0,
        progress=0.2,
    )
    targets = directives.MultiTargetMisfits(
        chiSmall=1.0, TriggerSmall=True, TriggerTheta=False, verbose=True
    )
    petrodir = directives.PGI_UpdateParameters(update_gmm=False)

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, petrodir, targets, betaIt, scaling_schedule],
    )

    mcluster_no_map = inv.run(minit)

    # WeightedLeastSquares Inversion

    reg1 = regularization.WeightedLeastSquares(
        mesh, alpha_s=1.0, alpha_x=1.0, mapping=wires.m1, weights={"cell_weights": wr1}
    )

    reg2 = regularization.WeightedLeastSquares(
        mesh, alpha_s=1.0, alpha_x=1.0, mapping=wires.m2, weights={"cell_weights": wr2}
    )

    reg = reg1 + reg2

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )

    invProb = inverse_problem.BaseInvProblem(dmis, reg, opt)

    # directives
    alpha0_ratio = np.r_[1, 1, 1, 1]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    beta_schedule = directives.BetaSchedule(coolingFactor=5.0, coolingRate=1)
    targets = directives.MultiTargetMisfits(
        TriggerSmall=False,
        verbose=True,
    )

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, targets, beta_schedule, scaling_schedule],
    )

    mtik = inv.run(minit)


    # Final Plot
    fig, axes = plt.subplots(3, 4, figsize=(25, 15))
    axes = axes.reshape(12)
    left, width = 0.25, 0.5
    bottom, height = 0.25, 0.5
    right = left + width
    top = bottom + height

    axes[0].set_axis_off()
    axes[0].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Using true nonlinear\npetrophysical relationships"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[0].transAxes,
    )

    axes[1].plot(mesh.cell_centers_x, wires.m1 * mcluster_map, "b.-", ms=5, marker="v")
    axes[1].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[1].set_title("Problem 1")
    axes[1].legend(["Recovered Model", "True Model"], loc=1)
    axes[1].set_xlabel("X")
    axes[1].set_ylabel("Property 1")

    axes[2].plot(mesh.cell_centers_x, wires.m2 * mcluster_map, "r.-", ms=5, marker="v")
    axes[2].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[2].set_title("Problem 2")
    axes[2].legend(["Recovered Model", "True Model"], loc=1)
    axes[2].set_xlabel("X")
    axes[2].set_ylabel("Property 2")

    x, y = np.mgrid[-1:1:0.01, -4:2:0.01]
    pos = np.empty(x.shape + (2,))
    pos[:, :, 0] = x
    pos[:, :, 1] = y
    CS = axes[3].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.25,
        cmap="viridis",
    )
    axes[3].scatter(wires.m1 * mcluster_map, wires.m2 * mcluster_map, marker="v")
    axes[3].set_title("Petrophysical Distribution")
    CS.collections[0].set_label("")
    axes[3].legend(["True Petrophysical Distribution", "Recovered model crossplot"])
    axes[3].set_xlabel("Property 1")
    axes[3].set_ylabel("Property 2")

    axes[4].set_axis_off()
    axes[4].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Using a pure\nGaussian distribution"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[4].transAxes,
    )

    axes[5].plot(mesh.cell_centers_x, wires.m1 * mcluster_no_map, "b.-", ms=5, marker="v")
    axes[5].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[5].set_title("Problem 1")
    axes[5].legend(["Recovered Model", "True Model"], loc=1)
    axes[5].set_xlabel("X")
    axes[5].set_ylabel("Property 1")

    axes[6].plot(mesh.cell_centers_x, wires.m2 * mcluster_no_map, "r.-", ms=5, marker="v")
    axes[6].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[6].set_title("Problem 2")
    axes[6].legend(["Recovered Model", "True Model"], loc=1)
    axes[6].set_xlabel("X")
    axes[6].set_ylabel("Property 2")

    CSF = axes[7].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.5,
        label="True Petro. Distribution",
    )
    CS = axes[7].contour(
        x,
        y,
        np.exp(clfnomapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        500,
        cmap="viridis",
        linestyles="--",
        label="Modeled Petro. Distribution",
    )
    axes[7].scatter(
        wires.m1 * mcluster_no_map,
        wires.m2 * mcluster_no_map,
        marker="v",
        label="Recovered model crossplot",
    )
    axes[7].set_title("Petrophysical Distribution")
    axes[7].legend()
    axes[7].set_xlabel("Property 1")
    axes[7].set_ylabel("Property 2")

    # Tikonov

    axes[8].set_axis_off()
    axes[8].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Least-Squares\n~Using a single cluster"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[8].transAxes,
    )

    axes[9].plot(mesh.cell_centers_x, wires.m1 * mtik, "b.-", ms=5, marker="v")
    axes[9].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[9].set_title("Problem 1")
    axes[9].legend(["Recovered Model", "True Model"], loc=1)
    axes[9].set_xlabel("X")
    axes[9].set_ylabel("Property 1")

    axes[10].plot(mesh.cell_centers_x, wires.m2 * mtik, "r.-", ms=5, marker="v")
    axes[10].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[10].set_title("Problem 2")
    axes[10].legend(["Recovered Model", "True Model"], loc=1)
    axes[10].set_xlabel("X")
    axes[10].set_ylabel("Property 2")

    CS = axes[11].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.25,
        cmap="viridis",
    )
    axes[11].scatter(wires.m1 * mtik, wires.m2 * mtik, marker="v")
    axes[11].set_title("Petro Distribution")
    CS.collections[0].set_label("")
    axes[11].legend(["True Petro Distribution", "Recovered model crossplot"])
    axes[11].set_xlabel("Property 1")
    axes[11].set_ylabel("Property 2")
    plt.subplots_adjust(wspace=0.3, hspace=0.3, top=0.85)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 36.963 seconds)

**Estimated memory usage:**  10 MB


.. _sphx_glr_download_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_inv_1_PGI_Linear_1D_joint_WithRelationships.ipynb <plot_inv_1_PGI_Linear_1D_joint_WithRelationships.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py <plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
