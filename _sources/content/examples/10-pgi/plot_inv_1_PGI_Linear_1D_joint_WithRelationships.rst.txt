
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "content/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:


Petrophysically guided inversion: Joint linear example with nonlinear relationships
===================================================================================

We do a comparison between the classic least-squares inversion
and our formulation of a petrophysically guided inversion.
We explore it through coupling two linear problems whose respective physical
properties are linked by polynomial relationships that change between rock units.

.. GENERATED FROM PYTHON SOURCE LINES 11-432



.. image-sg:: /content/examples/10-pgi/images/sphx_glr_plot_inv_1_PGI_Linear_1D_joint_WithRelationships_001.png
   :alt: Problem 1, Problem 2, Petrophysical Distribution, Problem 1, Problem 2, Petrophysical Distribution, Problem 1, Problem 2, Petro Distribution
   :srcset: /content/examples/10-pgi/images/sphx_glr_plot_inv_1_PGI_Linear_1D_joint_WithRelationships_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Running inversion with SimPEG v0.22.2.dev28+g702389ee2
    simpeg.InvProblem will set Regularization.reference_model to m0.
    simpeg.InvProblem will set Regularization.reference_model to m0.
    simpeg.InvProblem will set Regularization.reference_model to m0.

                        simpeg.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
                        ***Done using the default solver Pardiso and no solver_opts.***
                    
    Alpha scales: [3.496035266806808, 0.0, 3.4967706181948786e-06, 0.0]
    Calculating the scaling parameter.
    Scale Multipliers:  [0.09662605 0.90337395]
    <class 'simpeg.regularization.pgi.PGIsmallness'>
    Initial data misfit scales:  [0.09662605 0.90337395]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.94e+01  3.00e+05  0.00e+00  3.00e+05    1.41e+02      0              
    geophys. misfits: 1060.9 (target 30.0 [False]); 94.3 (target 30.0 [False]) | smallness misfit: 2990.7 (target: 200.0 [False])
    Beta cooling evaluation: progress: [1060.9   94.3]; minimum progress targets: [240000. 240000.]
       1  1.94e+01  1.88e+02  4.12e+01  9.88e+02    8.57e+01      0              
    geophys. misfits: 469.8 (target 30.0 [False]); 36.1 (target 30.0 [False]) | smallness misfit: 1385.9 (target: 200.0 [False])
    Beta cooling evaluation: progress: [469.8  36.1]; minimum progress targets: [848.8  75.4]
       2  1.94e+01  7.80e+01  4.01e+01  8.58e+02    4.97e+01      0   Skip BFGS  
    geophys. misfits: 459.6 (target 30.0 [False]); 35.8 (target 30.0 [False]) | smallness misfit: 1370.4 (target: 200.0 [False])
    Beta cooling evaluation: progress: [459.6  35.8]; minimum progress targets: [375.8  30. ]
    Decreasing beta to counter data misfit decrase plateau.
       3  9.72e+00  7.67e+01  4.02e+01  4.67e+02    8.76e+01      0   Skip BFGS  
    geophys. misfits: 170.0 (target 30.0 [False]); 29.9 (target 30.0 [True]) | smallness misfit: 1399.8 (target: 200.0 [False])
    Beta cooling evaluation: progress: [170.   29.9]; minimum progress targets: [367.7  30. ]
    Updating scaling for data misfits by  1.0021322468787262
    New scales: [0.09681214 0.90318786]
       4  9.72e+00  4.35e+01  4.25e+01  4.56e+02    7.77e+01      0              
    geophys. misfits: 166.4 (target 30.0 [False]); 29.9 (target 30.0 [True]) | smallness misfit: 1386.2 (target: 200.0 [False])
    Beta cooling evaluation: progress: [166.4  29.9]; minimum progress targets: [136.  30.]
    Decreasing beta to counter data misfit decrase plateau.
    Updating scaling for data misfits by  1.003618064812992
    New scales: [0.09712839 0.90287161]
       5  4.86e+00  4.32e+01  4.25e+01  2.50e+02    7.20e+01      0   Skip BFGS  
    geophys. misfits: 83.7 (target 30.0 [False]); 27.1 (target 30.0 [True]) | smallness misfit: 1475.2 (target: 200.0 [False])
    Beta cooling evaluation: progress: [83.7 27.1]; minimum progress targets: [133.1  30. ]
    Updating scaling for data misfits by  1.1059623515589443
    New scales: [0.10632604 0.89367396]
       6  4.86e+00  3.31e+01  4.40e+01  2.47e+02    8.76e+01      0              
    geophys. misfits: 73.4 (target 30.0 [False]); 27.2 (target 30.0 [True]) | smallness misfit: 1450.5 (target: 200.0 [False])
    Beta cooling evaluation: progress: [73.4 27.2]; minimum progress targets: [66.9 30. ]
    Decreasing beta to counter data misfit decrase plateau.
    Updating scaling for data misfits by  1.1028985363157162
    New scales: [0.11599772 0.88400228]
       7  2.43e+00  3.26e+01  4.41e+01  1.40e+02    8.39e+01      0              
    geophys. misfits: 28.4 (target 30.0 [True]); 24.3 (target 30.0 [True]) | smallness misfit: 1717.1 (target: 200.0 [False])
    Beta cooling evaluation: progress: [28.4 24.3]; minimum progress targets: [58.7 30. ]
    Warming alpha_pgi to favor clustering:  1.1464169826467625
       8  2.43e+00  2.48e+01  4.65e+01  1.38e+02    6.93e+01      0              
    geophys. misfits: 27.7 (target 30.0 [True]); 24.7 (target 30.0 [True]) | smallness misfit: 1567.2 (target: 200.0 [False])
    Beta cooling evaluation: progress: [27.7 24.7]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  1.3169947622166696
       9  2.43e+00  2.51e+01  4.67e+01  1.39e+02    7.73e+01      0              
    geophys. misfits: 22.3 (target 30.0 [True]); 24.7 (target 30.0 [True]) | smallness misfit: 1509.4 (target: 200.0 [False])
    Beta cooling evaluation: progress: [22.3 24.7]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  1.6836839255181482
      10  2.43e+00  2.44e+01  4.80e+01  1.41e+02    6.46e+01      0              
    geophys. misfits: 20.6 (target 30.0 [True]); 25.4 (target 30.0 [True]) | smallness misfit: 1366.5 (target: 200.0 [False])
    Beta cooling evaluation: progress: [20.6 25.4]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  2.2226290323474434
      11  2.43e+00  2.48e+01  4.93e+01  1.45e+02    4.94e+01      0              
    geophys. misfits: 18.2 (target 30.0 [True]); 26.1 (target 30.0 [True]) | smallness misfit: 1208.0 (target: 200.0 [False])
    Beta cooling evaluation: progress: [18.2 26.1]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  3.10478827716185
      12  2.43e+00  2.52e+01  5.13e+01  1.50e+02    4.94e+01      0              
    geophys. misfits: 16.0 (target 30.0 [True]); 27.0 (target 30.0 [True]) | smallness misfit: 1033.2 (target: 200.0 [False])
    Beta cooling evaluation: progress: [16. 27.]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  4.632674477623243
      13  2.43e+00  2.57e+01  5.42e+01  1.57e+02    6.88e+01      0              
    geophys. misfits: 15.2 (target 30.0 [True]); 28.1 (target 30.0 [True]) | smallness misfit: 862.7 (target: 200.0 [False])
    Beta cooling evaluation: progress: [15.2 28.1]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  7.058039790091108
      14  2.43e+00  2.66e+01  5.79e+01  1.67e+02    8.75e+01      0              
    geophys. misfits: 14.1 (target 30.0 [True]); 29.3 (target 30.0 [True]) | smallness misfit: 674.0 (target: 200.0 [False])
    Beta cooling evaluation: progress: [14.1 29.3]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  11.130778900525112
      15  2.43e+00  2.76e+01  6.27e+01  1.80e+02    9.13e+01      0              
    geophys. misfits: 23.5 (target 30.0 [True]); 31.1 (target 30.0 [False]) | smallness misfit: 516.8 (target: 200.0 [False])
    Beta cooling evaluation: progress: [23.5 31.1]; minimum progress targets: [30. 30.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.278015072326566
    New scales: [0.09311358 0.90688642]
      16  1.21e+00  3.04e+01  6.08e+01  1.04e+02    8.87e+01      0              
    geophys. misfits: 13.8 (target 30.0 [True]); 27.4 (target 30.0 [True]) | smallness misfit: 571.7 (target: 200.0 [False])
    Beta cooling evaluation: progress: [13.8 27.4]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  18.201347376301438
      17  1.21e+00  2.61e+01  7.15e+01  1.13e+02    8.73e+01      0              
    geophys. misfits: 11.1 (target 30.0 [True]); 26.8 (target 30.0 [True]) | smallness misfit: 495.8 (target: 200.0 [False])
    Beta cooling evaluation: progress: [11.1 26.8]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  34.699946891238554
      18  1.21e+00  2.53e+01  8.84e+01  1.33e+02    9.94e+01      0              
    geophys. misfits: 12.0 (target 30.0 [True]); 25.7 (target 30.0 [True]) | smallness misfit: 410.2 (target: 200.0 [False])
    Beta cooling evaluation: progress: [12.  25.7]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  63.76861100976681
      19  1.21e+00  2.44e+01  1.12e+02  1.60e+02    1.09e+02      0              
    geophys. misfits: 12.0 (target 30.0 [True]); 25.5 (target 30.0 [True]) | smallness misfit: 337.5 (target: 200.0 [False])
    Beta cooling evaluation: progress: [12.  25.5]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  117.22802408041778
      20  1.21e+00  2.42e+01  1.46e+02  2.01e+02    1.18e+02      0              
    geophys. misfits: 27.9 (target 30.0 [True]); 25.4 (target 30.0 [True]) | smallness misfit: 264.7 (target: 200.0 [False])
    Beta cooling evaluation: progress: [27.9 25.4]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  132.0804654992148
      21  1.21e+00  2.57e+01  1.46e+02  2.03e+02    1.21e+02      0              
    geophys. misfits: 34.8 (target 30.0 [False]); 26.5 (target 30.0 [True]) | smallness misfit: 256.1 (target: 200.0 [False])
    Beta cooling evaluation: progress: [34.8 26.5]; minimum progress targets: [30. 30.]
    Decreasing beta to counter data misfit increase.
    Updating scaling for data misfits by  1.1323904290402127
    New scales: [0.10415694 0.89584306]
      22  6.07e-01  2.74e+01  1.44e+02  1.15e+02    1.14e+02      0              
    geophys. misfits: 17.1 (target 30.0 [True]); 26.0 (target 30.0 [True]) | smallness misfit: 257.8 (target: 200.0 [False])
    Beta cooling evaluation: progress: [17.1 26. ]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  191.758904091381
      23  6.07e-01  2.51e+01  1.77e+02  1.32e+02    1.13e+02      0              
    geophys. misfits: 18.3 (target 30.0 [True]); 26.4 (target 30.0 [True]) | smallness misfit: 223.2 (target: 200.0 [False])
    Beta cooling evaluation: progress: [18.3 26.4]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  265.739338400227
      24  6.07e-01  2.56e+01  1.98e+02  1.46e+02    1.14e+02      1              
    geophys. misfits: 21.9 (target 30.0 [True]); 28.8 (target 30.0 [True]) | smallness misfit: 178.1 (target: 200.0 [True])
    All targets have been reached
    Beta cooling evaluation: progress: [21.9 28.8]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  319.93669327440426
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 3.0000e+04
    0 : |xc-x_last| = 5.8586e-01 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 1.1421e+02 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 1.1421e+02 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =     25
    ------------------------- DONE! -------------------------

    Running inversion with SimPEG v0.22.2.dev28+g702389ee2
    simpeg.InvProblem will set Regularization.reference_model to m0.
    simpeg.InvProblem will set Regularization.reference_model to m0.
    simpeg.InvProblem will set Regularization.reference_model to m0.

                        simpeg.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
                        ***Done using the default solver Pardiso and no solver_opts.***
                    
    Alpha scales: [0.00034677278353567424, 0.0, 3.582427428636043e-06, 0.0]
    Calculating the scaling parameter.
    Scale Multipliers:  [0.09662605 0.90337395]
    <class 'simpeg.regularization.pgi.PGIsmallness'>
    Initial data misfit scales:  [0.09662605 0.90337395]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.97e+03  3.00e+05  0.00e+00  3.00e+05    1.41e+02      0              
    geophys. misfits: 88510.6 (target 30.0 [False]); 63659.7 (target 30.0 [False]) | smallness misfit: 280.3 (target: 200.0 [False])
    Beta cooling evaluation: progress: [88510.6 63659.7]; minimum progress targets: [240000. 240000.]
       1  1.97e+03  6.61e+04  6.63e-01  6.74e+04    9.17e+01      0              
    geophys. misfits: 611.2 (target 30.0 [False]); 28.8 (target 30.0 [True]) | smallness misfit: 99.4 (target: 200.0 [True])
    Beta cooling evaluation: progress: [611.2  28.8]; minimum progress targets: [70808.5 50927.7]
    Updating scaling for data misfits by  1.0403489064558682
    New scales: [0.10013441 0.89986559]
       2  1.97e+03  8.71e+01  2.58e-01  5.97e+02    5.85e+01      0   Skip BFGS  
    geophys. misfits: 108.6 (target 30.0 [False]); 28.6 (target 30.0 [True]) | smallness misfit: 61.1 (target: 200.0 [True])
    Beta cooling evaluation: progress: [108.6  28.6]; minimum progress targets: [488.9  30. ]
    Updating scaling for data misfits by  1.04824124108606
    New scales: [0.10446041 0.89553959]
       3  1.97e+03  3.70e+01  1.76e-01  3.84e+02    7.52e+01      0   Skip BFGS  
    geophys. misfits: 96.9 (target 30.0 [False]); 27.0 (target 30.0 [True]) | smallness misfit: 45.2 (target: 200.0 [True])
    Beta cooling evaluation: progress: [96.9 27. ]; minimum progress targets: [86.9 30. ]
    Decreasing beta to counter data misfit decrase plateau.
    Updating scaling for data misfits by  1.1095731361612167
    New scales: [0.1145948 0.8854052]
       4  9.86e+02  3.50e+01  1.24e-01  1.57e+02    9.50e+01      0              
    geophys. misfits: 34.2 (target 30.0 [False]); 25.5 (target 30.0 [True]) | smallness misfit: 47.8 (target: 200.0 [True])
    Beta cooling evaluation: progress: [34.2 25.5]; minimum progress targets: [77.5 30. ]
    Updating scaling for data misfits by  1.1776260448052676
    New scales: [0.13225772 0.86774228]
       5  9.86e+02  2.66e+01  1.30e-01  1.54e+02    5.79e+01      0              
    geophys. misfits: 28.6 (target 30.0 [True]); 25.5 (target 30.0 [True]) | smallness misfit: 48.2 (target: 200.0 [True])
    All targets have been reached
    Beta cooling evaluation: progress: [28.6 25.5]; minimum progress targets: [30. 30.]
    Warming alpha_pgi to favor clustering:  1.1123196302907212
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 3.0000e+04
    0 : |xc-x_last| = 6.9020e-02 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 5.7894e+01 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 5.7894e+01 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =      6
    ------------------------- DONE! -------------------------

    Running inversion with SimPEG v0.22.2.dev28+g702389ee2
    simpeg.InvProblem will set Regularization.reference_model to m0.
    simpeg.InvProblem will set Regularization.reference_model to m0.

                        simpeg.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.
                        ***Done using the default solver Pardiso and no solver_opts.***
                    
    Alpha scales: [3.361888502920294e-05, 0.0, 3.362582638712545e-05, 0.0]
    Calculating the scaling parameter.
    Scale Multipliers:  [0.09662605 0.90337395]
    /home/vsts/work/1/s/simpeg/directives/directives.py:339: UserWarning:

    There is no PGI regularization. Smallness target is turned off (TriggerSmall flag)

    Initial data misfit scales:  [0.09662605 0.90337395]
    model has any nan: 0
    =============================== Projected GNCG ===============================
      #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   
    -----------------------------------------------------------------------------
    x0 has any nan: 0
       0  1.06e+06  3.00e+05  0.00e+00  3.00e+05    1.41e+02      0              
    geophys. misfits: 56695.6 (target 30.0 [False]); 36657.1 (target 30.0 [False])
       1  2.13e+05  3.86e+04  4.19e-02  4.75e+04    1.38e+02      0              
    geophys. misfits: 8455.0 (target 30.0 [False]); 4041.9 (target 30.0 [False])
       2  4.26e+04  4.47e+03  1.06e-01  8.97e+03    1.31e+02      0   Skip BFGS  
    geophys. misfits: 562.5 (target 30.0 [False]); 282.1 (target 30.0 [False])
       3  8.51e+03  3.09e+02  1.40e-01  1.50e+03    1.02e+02      0   Skip BFGS  
    geophys. misfits: 37.0 (target 30.0 [False]); 45.2 (target 30.0 [False])
       4  1.70e+03  4.44e+01  1.51e-01  3.02e+02    8.43e+01      0   Skip BFGS  
    geophys. misfits: 10.4 (target 30.0 [True]); 25.5 (target 30.0 [True])
    All targets have been reached
    ------------------------- STOP! -------------------------
    1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 3.0000e+04
    0 : |xc-x_last| = 5.7510e-01 <= tolX*(1+|x0|) = 1.0000e-06
    0 : |proj(x-g)-x|    = 8.4288e+01 <= tolG          = 1.0000e-01
    0 : |proj(x-g)-x|    = 8.4288e+01 <= 1e3*eps       = 1.0000e-02
    0 : maxIter   =      50    <= iter          =      5
    ------------------------- DONE! -------------------------
    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:301: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:308: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:329: MatplotlibDeprecationWarning:

    The collections attribute was deprecated in Matplotlib 3.8 and will be removed in 3.10.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:346: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:353: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:360: UserWarning:

    The following kwargs were not used by contour: 'label'

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:368: UserWarning:

    The following kwargs were not used by contour: 'label'

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:402: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "b.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:409: UserWarning:

    marker is redundantly defined by the 'marker' keyword argument and the fmt string "r.-" (-> marker='.'). The keyword argument will take precedence.

    /home/vsts/work/1/s/examples/10-pgi/plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:426: MatplotlibDeprecationWarning:

    The collections attribute was deprecated in Matplotlib 3.8 and will be removed in 3.10.







|

.. code-block:: Python


    import discretize as Mesh
    import matplotlib.pyplot as plt
    import numpy as np
    from simpeg import (
        data_misfit,
        directives,
        inverse_problem,
        inversion,
        maps,
        optimization,
        regularization,
        simulation,
        utils,
    )

    # Random seed for reproductibility
    np.random.seed(1)
    # Mesh
    N = 100
    mesh = Mesh.TensorMesh([N])

    # Survey design parameters
    nk = 30
    jk = np.linspace(1.0, 59.0, nk)
    p = -0.25
    q = 0.25


    # Physics
    def g(k):
        return np.exp(p * jk[k] * mesh.cell_centers_x) * np.cos(
            np.pi * q * jk[k] * mesh.cell_centers_x
        )


    G = np.empty((nk, mesh.nC))

    for i in range(nk):
        G[i, :] = g(i)

    m0 = np.zeros(mesh.nC)
    m0[20:41] = np.linspace(0.0, 1.0, 21)
    m0[41:57] = np.linspace(-1, 0.0, 16)

    poly0 = maps.PolynomialPetroClusterMap(coeffyx=np.r_[0.0, -4.0, 4.0])
    poly1 = maps.PolynomialPetroClusterMap(coeffyx=np.r_[-0.0, 3.0, 6.0, 6.0])
    poly0_inverse = maps.PolynomialPetroClusterMap(coeffyx=-np.r_[0.0, -4.0, 4.0])
    poly1_inverse = maps.PolynomialPetroClusterMap(coeffyx=-np.r_[0.0, 3.0, 6.0, 6.0])
    cluster_mapping = [maps.IdentityMap(), poly0_inverse, poly1_inverse]

    m1 = np.zeros(100)
    m1[20:41] = 1.0 + (poly0 * np.vstack([m0[20:41], m1[20:41]]).T)[:, 1]
    m1[41:57] = -1.0 + (poly1 * np.vstack([m0[41:57], m1[41:57]]).T)[:, 1]

    model2d = np.vstack([m0, m1]).T
    m = utils.mkvc(model2d)

    clfmapping = utils.GaussianMixtureWithNonlinearRelationships(
        mesh=mesh,
        n_components=3,
        covariance_type="full",
        tol=1e-8,
        reg_covar=1e-3,
        max_iter=1000,
        n_init=100,
        init_params="kmeans",
        random_state=None,
        warm_start=False,
        means_init=np.array(
            [
                [0, 0],
                [m0[20:41].mean(), m1[20:41].mean()],
                [m0[41:57].mean(), m1[41:57].mean()],
            ]
        ),
        verbose=0,
        verbose_interval=10,
        cluster_mapping=cluster_mapping,
    )
    clfmapping = clfmapping.fit(model2d)

    clfnomapping = utils.WeightedGaussianMixture(
        mesh=mesh,
        n_components=3,
        covariance_type="full",
        tol=1e-8,
        reg_covar=1e-3,
        max_iter=1000,
        n_init=100,
        init_params="kmeans",
        random_state=None,
        warm_start=False,
        verbose=0,
        verbose_interval=10,
    )
    clfnomapping = clfnomapping.fit(model2d)

    wires = maps.Wires(("m1", mesh.nC), ("m2", mesh.nC))

    relatrive_error = 0.01
    noise_floor = 0.0

    prob1 = simulation.LinearSimulation(mesh, G=G, model_map=wires.m1)
    survey1 = prob1.make_synthetic_data(
        m, relative_error=relatrive_error, noise_floor=noise_floor, add_noise=True
    )

    prob2 = simulation.LinearSimulation(mesh, G=G, model_map=wires.m2)
    survey2 = prob2.make_synthetic_data(
        m, relative_error=relatrive_error, noise_floor=noise_floor, add_noise=True
    )


    dmis1 = data_misfit.L2DataMisfit(simulation=prob1, data=survey1)
    dmis2 = data_misfit.L2DataMisfit(simulation=prob2, data=survey2)
    dmis = dmis1 + dmis2
    minit = np.zeros_like(m)

    # Distance weighting
    wr1 = np.sum(prob1.G**2.0, axis=0) ** 0.5 / mesh.cell_volumes
    wr1 = wr1 / np.max(wr1)
    wr2 = np.sum(prob2.G**2.0, axis=0) ** 0.5 / mesh.cell_volumes
    wr2 = wr2 / np.max(wr2)

    reg_simple = regularization.PGI(
        mesh=mesh,
        gmmref=clfmapping,
        gmm=clfmapping,
        approx_gradient=True,
        wiresmap=wires,
        non_linear_relationships=True,
        weights_list=[wr1, wr2],
    )

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )

    invProb = inverse_problem.BaseInvProblem(dmis, reg_simple, opt)

    # directives
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    alpha0_ratio = np.r_[1e6, 1e4, 1, 1]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    betaIt = directives.PGI_BetaAlphaSchedule(
        verbose=True,
        coolingFactor=2.0,
        progress=0.2,
    )
    targets = directives.MultiTargetMisfits(verbose=True)
    petrodir = directives.PGI_UpdateParameters(update_gmm=False)

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, petrodir, targets, betaIt, scaling_schedule],
    )

    mcluster_map = inv.run(minit)

    # Inversion with no nonlinear mapping
    reg_simple_no_map = regularization.PGI(
        mesh=mesh,
        gmmref=clfnomapping,
        gmm=clfnomapping,
        approx_gradient=True,
        wiresmap=wires,
        non_linear_relationships=False,
        weights_list=[wr1, wr2],
    )

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )

    invProb = inverse_problem.BaseInvProblem(dmis, reg_simple_no_map, opt)

    # directives
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    alpha0_ratio = np.r_[100.0 * np.ones(2), 1, 1]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    betaIt = directives.PGI_BetaAlphaSchedule(
        verbose=True,
        coolingFactor=2.0,
        progress=0.2,
    )
    targets = directives.MultiTargetMisfits(
        chiSmall=1.0, TriggerSmall=True, TriggerTheta=False, verbose=True
    )
    petrodir = directives.PGI_UpdateParameters(update_gmm=False)

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, petrodir, targets, betaIt, scaling_schedule],
    )

    mcluster_no_map = inv.run(minit)

    # WeightedLeastSquares Inversion

    reg1 = regularization.WeightedLeastSquares(
        mesh, alpha_s=1.0, alpha_x=1.0, mapping=wires.m1, weights={"cell_weights": wr1}
    )

    reg2 = regularization.WeightedLeastSquares(
        mesh, alpha_s=1.0, alpha_x=1.0, mapping=wires.m2, weights={"cell_weights": wr2}
    )

    reg = reg1 + reg2

    opt = optimization.ProjectedGNCG(
        maxIter=50,
        tolX=1e-6,
        maxIterCG=100,
        tolCG=1e-3,
        lower=-10,
        upper=10,
    )

    invProb = inverse_problem.BaseInvProblem(dmis, reg, opt)

    # directives
    alpha0_ratio = np.r_[1, 1, 1, 1]
    alphas = directives.AlphasSmoothEstimate_ByEig(
        alpha0_ratio=alpha0_ratio, n_pw_iter=10, verbose=True
    )
    scales = directives.ScalingMultipleDataMisfits_ByEig(
        chi0_ratio=np.r_[1.0, 1.0], verbose=True, n_pw_iter=10
    )
    scaling_schedule = directives.JointScalingSchedule(verbose=True)
    beta = directives.BetaEstimate_ByEig(beta0_ratio=1e-5, n_pw_iter=10)
    beta_schedule = directives.BetaSchedule(coolingFactor=5.0, coolingRate=1)
    targets = directives.MultiTargetMisfits(
        TriggerSmall=False,
        verbose=True,
    )

    # Setup Inversion
    inv = inversion.BaseInversion(
        invProb,
        directiveList=[alphas, scales, beta, targets, beta_schedule, scaling_schedule],
    )

    mtik = inv.run(minit)


    # Final Plot
    fig, axes = plt.subplots(3, 4, figsize=(25, 15))
    axes = axes.reshape(12)
    left, width = 0.25, 0.5
    bottom, height = 0.25, 0.5
    right = left + width
    top = bottom + height

    axes[0].set_axis_off()
    axes[0].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Using true nonlinear\npetrophysical relationships"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[0].transAxes,
    )

    axes[1].plot(mesh.cell_centers_x, wires.m1 * mcluster_map, "b.-", ms=5, marker="v")
    axes[1].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[1].set_title("Problem 1")
    axes[1].legend(["Recovered Model", "True Model"], loc=1)
    axes[1].set_xlabel("X")
    axes[1].set_ylabel("Property 1")

    axes[2].plot(mesh.cell_centers_x, wires.m2 * mcluster_map, "r.-", ms=5, marker="v")
    axes[2].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[2].set_title("Problem 2")
    axes[2].legend(["Recovered Model", "True Model"], loc=1)
    axes[2].set_xlabel("X")
    axes[2].set_ylabel("Property 2")

    x, y = np.mgrid[-1:1:0.01, -4:2:0.01]
    pos = np.empty(x.shape + (2,))
    pos[:, :, 0] = x
    pos[:, :, 1] = y
    CS = axes[3].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.25,
        cmap="viridis",
    )
    axes[3].scatter(wires.m1 * mcluster_map, wires.m2 * mcluster_map, marker="v")
    axes[3].set_title("Petrophysical Distribution")
    CS.collections[0].set_label("")
    axes[3].legend(["True Petrophysical Distribution", "Recovered model crossplot"])
    axes[3].set_xlabel("Property 1")
    axes[3].set_ylabel("Property 2")

    axes[4].set_axis_off()
    axes[4].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Using a pure\nGaussian distribution"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[4].transAxes,
    )

    axes[5].plot(mesh.cell_centers_x, wires.m1 * mcluster_no_map, "b.-", ms=5, marker="v")
    axes[5].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[5].set_title("Problem 1")
    axes[5].legend(["Recovered Model", "True Model"], loc=1)
    axes[5].set_xlabel("X")
    axes[5].set_ylabel("Property 1")

    axes[6].plot(mesh.cell_centers_x, wires.m2 * mcluster_no_map, "r.-", ms=5, marker="v")
    axes[6].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[6].set_title("Problem 2")
    axes[6].legend(["Recovered Model", "True Model"], loc=1)
    axes[6].set_xlabel("X")
    axes[6].set_ylabel("Property 2")

    CSF = axes[7].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.5,
        label="True Petro. Distribution",
    )
    CS = axes[7].contour(
        x,
        y,
        np.exp(clfnomapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        500,
        cmap="viridis",
        linestyles="--",
        label="Modeled Petro. Distribution",
    )
    axes[7].scatter(
        wires.m1 * mcluster_no_map,
        wires.m2 * mcluster_no_map,
        marker="v",
        label="Recovered model crossplot",
    )
    axes[7].set_title("Petrophysical Distribution")
    axes[7].legend()
    axes[7].set_xlabel("Property 1")
    axes[7].set_ylabel("Property 2")

    # Tikonov

    axes[8].set_axis_off()
    axes[8].text(
        0.5 * (left + right),
        0.5 * (bottom + top),
        ("Least-Squares\n~Using a single cluster"),
        horizontalalignment="center",
        verticalalignment="center",
        fontsize=20,
        color="black",
        transform=axes[8].transAxes,
    )

    axes[9].plot(mesh.cell_centers_x, wires.m1 * mtik, "b.-", ms=5, marker="v")
    axes[9].plot(mesh.cell_centers_x, wires.m1 * m, "k--")
    axes[9].set_title("Problem 1")
    axes[9].legend(["Recovered Model", "True Model"], loc=1)
    axes[9].set_xlabel("X")
    axes[9].set_ylabel("Property 1")

    axes[10].plot(mesh.cell_centers_x, wires.m2 * mtik, "r.-", ms=5, marker="v")
    axes[10].plot(mesh.cell_centers_x, wires.m2 * m, "k--")
    axes[10].set_title("Problem 2")
    axes[10].legend(["Recovered Model", "True Model"], loc=1)
    axes[10].set_xlabel("X")
    axes[10].set_ylabel("Property 2")

    CS = axes[11].contour(
        x,
        y,
        np.exp(clfmapping.score_samples(pos.reshape(-1, 2)).reshape(x.shape)),
        100,
        alpha=0.25,
        cmap="viridis",
    )
    axes[11].scatter(wires.m1 * mtik, wires.m2 * mtik, marker="v")
    axes[11].set_title("Petro Distribution")
    CS.collections[0].set_label("")
    axes[11].legend(["True Petro Distribution", "Recovered model crossplot"])
    axes[11].set_xlabel("Property 1")
    axes[11].set_ylabel("Property 2")
    plt.subplots_adjust(wspace=0.3, hspace=0.3, top=0.85)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 40.428 seconds)

**Estimated memory usage:**  236 MB


.. _sphx_glr_download_content_examples_10-pgi_plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_inv_1_PGI_Linear_1D_joint_WithRelationships.ipynb <plot_inv_1_PGI_Linear_1D_joint_WithRelationships.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py <plot_inv_1_PGI_Linear_1D_joint_WithRelationships.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_inv_1_PGI_Linear_1D_joint_WithRelationships.zip <plot_inv_1_PGI_Linear_1D_joint_WithRelationships.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
